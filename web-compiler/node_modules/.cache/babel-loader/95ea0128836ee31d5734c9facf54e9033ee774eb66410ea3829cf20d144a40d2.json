{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hallm\\\\OneDrive\\\\Documents\\\\Projects folder\\\\React\\\\AI_Web_Compiler\\\\web-compiler\\\\src\\\\Components\\\\CodeBox.js\",\n  _s = $RefreshSig$();\nimport { appModel } from \"../Models/AppModel\";\nimport \"../Styles/CodeBox.css\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CodeField = () => {\n  _s();\n  const {\n    setInput,\n    userInput\n  } = useContext(appModel);\n  const [lineNumber, setLines] = useState([\"\"]);\n  const lineNumContainer = useRef(null);\n  const inputContainer = useRef(null);\n  function countLines(text) {\n    setLines(text.split(\"\\n\"));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputBoxLeft\",\n        children: lineNumber.map((text, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"InputLineNum\",\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputBox\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"codeInput\",\n          wrap: \"off\",\n          value: userInput,\n          onChange: e => {\n            setInput(e.target.value);\n            countLines(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CodeField, \"4+7GmsYLpuAzVmVRZvFDCvTWmII=\");\n_c = CodeField;\nexport default CodeField;\nvar _c;\n$RefreshReg$(_c, \"CodeField\");","map":{"version":3,"names":["appModel","useContext","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CodeField","_s","setInput","userInput","lineNumber","setLines","lineNumContainer","useRef","inputContainer","countLines","text","split","children","className","map","index","fileName","_jsxFileName","columnNumber","wrap","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/hallm/OneDrive/Documents/Projects folder/React/AI_Web_Compiler/web-compiler/src/Components/CodeBox.js"],"sourcesContent":["import { appModel } from \"../Models/AppModel\";\r\nimport \"../Styles/CodeBox.css\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nconst CodeField = () => {\r\n  const { setInput, userInput } = useContext(appModel);\r\n  const [lineNumber, setLines] = useState([\"\"]);\r\n  const lineNumContainer = useRef(null);\r\n  const inputContainer = useRef(null);\r\n  function countLines(text) {\r\n    setLines(text.split(\"\\n\"));\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"InputContainer\">\r\n        <div className=\"InputBoxLeft\">\r\n          {lineNumber.map((text, index) => {\r\n            return <p className=\"InputLineNum\">{index}</p>;\r\n          })}\r\n        </div>\r\n        <div className=\"InputBox\">\r\n          <textarea\r\n            className=\"codeInput\"\r\n            wrap=\"off\"\r\n            value={userInput}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n              countLines(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CodeField;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,OAAO,uBAAuB;AAC9B,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGT,UAAU,CAACD,QAAQ,CAAC;EACpD,MAAM,CAACW,UAAU,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7C,MAAMW,gBAAgB,GAAGC,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMC,cAAc,GAAGD,MAAM,CAAC,IAAI,CAAC;EACnC,SAASE,UAAUA,CAACC,IAAI,EAAE;IACxBL,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAAC;EAC5B;EACA,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7Bf,OAAA;QAAKgB,SAAS,EAAC,cAAc;QAAAD,QAAA,EAC1BR,UAAU,CAACU,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,KAAK;UAC/B,oBAAOlB,OAAA;YAAGgB,SAAS,EAAC,cAAc;YAAAD,QAAA,EAAEG;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAb,UAAA;YAAAc,YAAA;UAAA,OAAI,CAAC;QAChD,CAAC;MAAC;QAAAF,QAAA,EAAAC,YAAA;QAAAb,UAAA;QAAAc,YAAA;MAAA,OACC,CAAC,eACNrB,OAAA;QAAKgB,SAAS,EAAC,UAAU;QAAAD,QAAA,eACvBf,OAAA;UACEgB,SAAS,EAAC,WAAW;UACrBM,IAAI,EAAC,KAAK;UACVC,KAAK,EAAEjB,SAAU;UACjBkB,QAAQ,EAAGC,CAAC,IAAK;YACfpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;YACxBX,UAAU,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAC5B;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAb,UAAA;UAAAc,YAAA;QAAA,OACH;MAAC;QAAAF,QAAA,EAAAC,YAAA;QAAAb,UAAA;QAAAc,YAAA;MAAA,OACC,CAAC;IAAA;MAAAF,QAAA,EAAAC,YAAA;MAAAb,UAAA;MAAAc,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACjB,EAAA,CA9BID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}