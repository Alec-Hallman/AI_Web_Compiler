{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hallm\\\\OneDrive\\\\Documents\\\\Projects folder\\\\React\\\\AI_Web_Compiler\\\\web-compiler\\\\src\\\\Components\\\\CodeBox.js\",\n  _s = $RefreshSig$();\nimport { appModel } from \"../Models/AppModel\";\nimport \"../Styles/CodeBox.css\";\nimport { useContext, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CodeField = () => {\n  _s();\n  const {\n    setInput,\n    userInput\n  } = useContext(appModel);\n  const [lineNumber, setLines] = useState([\"\"]);\n  const lineNumContainer = useRef(null);\n  const inputContainer = useRef(null);\n  function countLines(text) {\n    setLines(text.split(\"\\n\"));\n  }\n  const syncScroll = e => {\n    if (lineNumContainer.current && inputContainer.current) {\n      if (e.target === inputContainer.current) {\n        lineNumContainer.current.scrollTop = e.target.scrollTop; // Sync lines when textarea scrolls\n      } else {\n        inputContainer.current.scrollTop = e.target.scrollTop; // Sync textarea when numbers scroll\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputBoxLeft\",\n        ref: lineNumContainer,\n        onScroll: syncScroll,\n        children: lineNumber.map((text, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"InputLineNum\",\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputBox\",\n        onScroll: syncScroll,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"codeInput\",\n          wrap: \"off\",\n          ref: inputContainer,\n          value: userInput,\n          onChange: e => {\n            setInput(e.target.value);\n            countLines(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CodeField, \"4+7GmsYLpuAzVmVRZvFDCvTWmII=\");\n_c = CodeField;\nexport default CodeField;\nvar _c;\n$RefreshReg$(_c, \"CodeField\");","map":{"version":3,"names":["appModel","useContext","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","CodeField","_s","setInput","userInput","lineNumber","setLines","lineNumContainer","inputContainer","countLines","text","split","syncScroll","e","current","target","scrollTop","children","className","ref","onScroll","map","index","fileName","_jsxFileName","columnNumber","wrap","value","onChange","_c","$RefreshReg$"],"sources":["C:/Users/hallm/OneDrive/Documents/Projects folder/React/AI_Web_Compiler/web-compiler/src/Components/CodeBox.js"],"sourcesContent":["import { appModel } from \"../Models/AppModel\";\r\nimport \"../Styles/CodeBox.css\";\r\nimport { useContext, useState, useRef } from \"react\";\r\n\r\nconst CodeField = () => {\r\n  const { setInput, userInput } = useContext(appModel);\r\n  const [lineNumber, setLines] = useState([\"\"]);\r\n  const lineNumContainer = useRef(null);\r\n  const inputContainer = useRef(null);\r\n  function countLines(text) {\r\n    setLines(text.split(\"\\n\"));\r\n  }\r\n  const syncScroll = (e) => {\r\n    if (lineNumContainer.current && inputContainer.current) {\r\n      if (e.target === inputContainer.current) {\r\n        lineNumContainer.current.scrollTop = e.target.scrollTop; // Sync lines when textarea scrolls\r\n      } else {\r\n        inputContainer.current.scrollTop = e.target.scrollTop; // Sync textarea when numbers scroll\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"InputContainer\">\r\n        <div\r\n          className=\"InputBoxLeft\"\r\n          ref={lineNumContainer}\r\n          onScroll={syncScroll}\r\n        >\r\n          {lineNumber.map((text, index) => {\r\n            return <p className=\"InputLineNum\">{index}</p>;\r\n          })}\r\n        </div>\r\n        <div className=\"InputBox\" onScroll={syncScroll}>\r\n          <textarea\r\n            className=\"codeInput\"\r\n            wrap=\"off\"\r\n            ref={inputContainer}\r\n            value={userInput}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n              countLines(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CodeField;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,OAAO,uBAAuB;AAC9B,SAASC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGV,UAAU,CAACD,QAAQ,CAAC;EACpD,MAAM,CAACY,UAAU,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7C,MAAMY,gBAAgB,GAAGX,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMY,cAAc,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACnC,SAASa,UAAUA,CAACC,IAAI,EAAE;IACxBJ,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAAC;EAC5B;EACA,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxB,IAAIN,gBAAgB,CAACO,OAAO,IAAIN,cAAc,CAACM,OAAO,EAAE;MACtD,IAAID,CAAC,CAACE,MAAM,KAAKP,cAAc,CAACM,OAAO,EAAE;QACvCP,gBAAgB,CAACO,OAAO,CAACE,SAAS,GAAGH,CAAC,CAACE,MAAM,CAACC,SAAS,CAAC,CAAC;MAC3D,CAAC,MAAM;QACLR,cAAc,CAACM,OAAO,CAACE,SAAS,GAAGH,CAAC,CAACE,MAAM,CAACC,SAAS,CAAC,CAAC;MACzD;IACF;EACF,CAAC;EACD,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAKoB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BnB,OAAA;QACEoB,SAAS,EAAC,cAAc;QACxBC,GAAG,EAAEZ,gBAAiB;QACtBa,QAAQ,EAAER,UAAW;QAAAK,QAAA,EAEpBZ,UAAU,CAACgB,GAAG,CAAC,CAACX,IAAI,EAAEY,KAAK,KAAK;UAC/B,oBAAOxB,OAAA;YAAGoB,SAAS,EAAC,cAAc;YAAAD,QAAA,EAAEK;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAnB,UAAA;YAAAoB,YAAA;UAAA,OAAI,CAAC;QAChD,CAAC;MAAC;QAAAF,QAAA,EAAAC,YAAA;QAAAnB,UAAA;QAAAoB,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QAAKoB,SAAS,EAAC,UAAU;QAACE,QAAQ,EAAER,UAAW;QAAAK,QAAA,eAC7CnB,OAAA;UACEoB,SAAS,EAAC,WAAW;UACrBQ,IAAI,EAAC,KAAK;UACVP,GAAG,EAAEX,cAAe;UACpBmB,KAAK,EAAEvB,SAAU;UACjBwB,QAAQ,EAAGf,CAAC,IAAK;YACfV,QAAQ,CAACU,CAAC,CAACE,MAAM,CAACY,KAAK,CAAC;YACxBlB,UAAU,CAACI,CAAC,CAACE,MAAM,CAACY,KAAK,CAAC;UAC5B;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAnB,UAAA;UAAAoB,YAAA;QAAA,OACH;MAAC;QAAAF,QAAA,EAAAC,YAAA;QAAAnB,UAAA;QAAAoB,YAAA;MAAA,OACC,CAAC;IAAA;MAAAF,QAAA,EAAAC,YAAA;MAAAnB,UAAA;MAAAoB,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACvB,EAAA,CA5CID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}